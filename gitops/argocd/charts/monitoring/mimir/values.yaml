# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
ingress:
  enabled: false

grafanaDashboard:
  enabled: true
  grafanaOperator:
    enabled: true
    matchLabels:
      grafana.com/dashboards: portefaix
    existingDashboards:
    - name: alertmanager
      folder: monitoring
    - name: alertmanager-resources
      folder: monitoring
    - name: compactor
      folder: monitoring
    - name: compactor-resources
      folder: monitoring
    - name: config
      folder: monitoring
    - name: object-store
      folder: monitoring
    - name: overrides
      folder: monitoring
    - name: overview
      folder: monitoring
    - name: overview-networking
      folder: monitoring
    - name: overview-resources
      folder: monitoring
    - name: queries
      folder: monitoring
    - name: reads
      folder: monitoring
    - name: reads-networking
      folder: monitoring
    - name: reads-resources
      folder: monitoring
    - name: remote-ruler-reads
      folder: monitoring
    - name: remote-ruler-reads-resources
      folder: monitoring
    - name: rollout-progress
      folder: monitoring
    - name: ruler
      folder: monitoring
    - name: scaling
      folder: monitoring
    - name: slow-queries
      folder: monitoring
    - name: tenants
      folder: monitoring
    - name: top-tenants
      folder: monitoring
    - name: writes
      folder: monitoring
    - name: writes-networking
      folder: monitoring
    - name: writes-resources
      folder: monitoring

mimir-distributed:
  serviceAccount:
    create: true
    name: mimir

  useExternalConfig: false
  configStorageType: ConfigMap
  externalConfigSecretName: mimir-configuration
  # TODO: https://github.com/grafana/mimir/issues/2296
  externalConfigVersion: "v0"

  alertmanager:
    enabled: true

  distributor:
    resources: {}

  ingester:
    resources: {}
    persistentVolume:
      enabled: false

  overrides_exporter:
    enabled: true
    resources: {}

  ruler:
    enabled: true
    resources: {}

  querier:
    resources: {}

  query_frontend:
    resources: {}

  query_scheduler:
    enabled: true

  store_gateway:
    resources: {}
    persistentVolume:
      enabled: false

  compactor:
    resources: {}
    persistentVolume:
      enabled: false

  memcachedExporter:
    enabled: true

  chunks-cache:
    enabled: false

  index-cache:
    enabled: false

  metadata-cache:
    enabled: false

  results-cache:
    enabled: false

  rollout_operator:
    enabled: true

  minio:
    enabled: false

  nginx:
    enabled: false
    resources: {}

  gateway:
    enabledNonEnterprise: true
    nginx:
      config:
        logFormat: |-
          main escape=json '{"source": "nginx", "level": "info", "time": $msec, "resp_body_size": $body_bytes_sent, "host": "$http_host", "address": "$remote_addr", "request_length": $request_length, "method": "$request_method", "uri": "$request_uri", "status": $status,  "user_agent": "$http_user_agent", "resp_time": $request_time, "upstream_addr": "$upstream_addr"}';

  metaMonitoring:
    dashboards:
      enabled: true
      annotations:
        grafana.com/folder: monitoring
      labels:
        grafana.com/dashboard: monitoring
    serviceMonitor:
      enabled: true
      labels:
        prometheus.io/operator: portefaix
    prometheusRule:
      enabled: true
      mimirAlerts: true
      mimirRules: true
      labels:
        prometheus.io/operator: portefaix
    grafanaAgent:
      enabled: false
      logs:
        enabled: false
      metrics:
        enabled: false

  graphite:
    enabled: false
  gr-aggr-cache:
    enabled: false
  gr-metricname-cache:
    enabled: false

  continuous_test:
    enabled: false

# mimir-mixin:
#   additionalLabels:
#     portefaix.xyz/version: v1.3.0

#   additionalAnnotations: {}

#   monitor:
#     additionalLabels:
#       prometheus.io/operator: portefaix

#   grafana:
#     folder: monitoring
