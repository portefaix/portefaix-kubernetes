# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
ingress:
  enabled: false

grafanaDashboard:
  enabled: true
  grafanaOperator:
    enabled: true
    matchLabels:
      grafana.com/dashboards: portefaix
    existingDashboards:
    - name: loki-dashboards-1
      key: loki-chunks.json
      folder: logging
    - name: loki-dashboards-1
      key: loki-deletion.json
      folder: logging
    - name: loki-dashboards-1
      key: loki-logs.json
      folder: logging
    - name: loki-dashboards-1
      key: loki-mixin-recording-rules.json
      folder: logging
    - name: loki-dashboards-1
      key: loki-operational.json
      folder: logging
    - name: loki-dashboards-2
      key: loki-reads.json
      folder: logging
    - name: loki-dashboards-2
      key: loki-reads-resources.json
      folder: logging
    - name: loki-dashboards-2
      key: loki-writes.json
      folder: logging
    - name: loki-dashboards-2
      key: loki-writes-resources.json
      folder: logging
    - name: loki-dashboards-2
      key: loki-retention.json
      folder: logging

alerting:
  dashboard_url: ""
  runbook_url: ""

enterprise:
  enabled: false

loki:
  loki:
    auth_enabled: false

  serviceAccount:
    create: true
    name: loki

  test:
    enabled: false

  lokiCanary:
    enabled: false

  monitoring:
    dashboards:
      enabled: true
      annotations:
        grafana.com/folder: logging
      labels:
        grafana.com/dashboard: loki
    rules:
      enabled: true
      alerting: true
      labels:
        prometheus.io/operator: portefaix
    serviceMonitor:
      enabled: true
      labels:
        prometheus.io/operator: portefaix
      metricsInstance:
        enabled: false
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    lokiCanary:
      enabled: false

  write:
    extraArgs:
    - -config.expand-env=true
    - -log.format=json
    - -log.level=info

  tableManager:
    enabled: false

  read:
    extraArgs:
    - -config.expand-env=true
    - -log.format=json
    - -log.level=info

  backend:
    extraArgs:
    - -config.expand-env=true
    - -log.format=json
    - -log.level=info

  singleBinary:
    extraArgs:
    - -config.expand-env=true
    - -log.format=json
    - -log.level=info

  gateway:
    enabled: true
    extraArgs:
    - -config.expand-env=true
    - -log.format=json
    - -log.level=info
    nginxConfig:
      logFormat: |-
        main escape=json '{"source": "nginx", "level": "info", "time": $msec, "resp_body_size": $body_bytes_sent, "host": "$http_host", "address": "$remote_addr", "request_length": $request_length, "method": "$request_method", "uri": "$request_uri", "status": $status,  "user_agent": "$http_user_agent", "resp_time": $request_time, "upstream_addr": "$upstream_addr"}';

  sidecar:
    enableUniqueFilenames: true
    rules:
      enabled: true
      label: loki-rule
      labelValue: ""
      folder: "/var/loki/rules/fake"
      logLevel: info
      searchNamespace: "ALL"

  networkPolicy:
    enabled: false

  minio:
    enabled: false

# loki-mixin:
#   additionalLabels:
#     portefaix.xyz/version: v1.3.0

#   monitor:
#     additionalLabels:
#       prometheus.io/operator: portefaix

#   grafana:
#     folder: logging
