# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

{{- if not .Values.ai.providers.localai.enabled }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "chart.labels" (index .Subcharts "kagent-operator") | nindent 4 }}
    app: kagent
  name: kagent-ai-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: kagent-ai-credentials
    creationPolicy: Owner
  data:
    # OpenAI
    {{- if .Values.ai.providers.openai.enabled }}
    - secretKey: openai-api-key
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: kagent_OPENAI
    {{- end }}
    # Azure OpenAI
    {{- if .Values.ai.providers.azure_openai.enabled }}
    - secretKey: azure-api-key
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: kagent_AZURE_OPENAI_APIKEY
    - secretKey: AZURE_OPENAI_ENDPOINT
      remoteRef:
        key: kagent_AZURE_OPENAI_ENDPOINT
    {{- end }}
    # AWS Bedrock
    {{- if .Values.ai.providers.aws_bedrock.enabled }}
    - secretKey: AWS_ACCESS_KEY_ID
      remoteRef:
        key: kagent_AWS_ACCESS_KEY
    - secretKey: AWS_SECRET_ACCESS_KEY
      remoteRef:
        key: kagent_AWS_SECRET_ACCESS_KEY
    {{- end }}
    # Google Gemini
    {{- if .Values.ai.providers.google_gemini.enabled }}
    - secretKey: GEMINI_API_KEY
      remoteRef:
        key: kagent_GEMINI_API_KEY
    {{- end }}
{{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  {{- if .Values.additionalAnnotations }}
  annotations:
  {{ toYaml .Values.additionalAnnotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "chart.labels" (index .Subcharts "kagent-operator") | nindent 4 }}
    app: kagent
  name: kagent-cloudflare-credentials
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    name: kagent-cloudflare-credentials
    creationPolicy: Owner
  data:
  - secretKey: AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS_ACCESS_KEY_ID
  - secretKey: AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS_SECRET_ACCESS_KEY
  - secretKey: AWS_S3_ENDPOINT
    remoteRef:
      key: AWS_S3_ENDPOINT
