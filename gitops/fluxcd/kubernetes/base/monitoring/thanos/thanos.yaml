# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes-charts.banzaicloud.com
      chart: thanos
      version: 0.4.5
      sourceRef:
        kind: HelmRepository
        name: banzaicloud-charts
        namespace: flux-system
  releaseName: thanos
  targetNamespace: monitoring
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  timeout: 10m
  values:
    commonLabels:
      portefaix.xyz/version: v1.3.0

    # image:
    #   repository: quay.io/thanos/thanos
    #   tag: v0.16.0
    objstoreSecretOverride: thanos-objstore-config

    store:
      enabled: true
      logLevel: info
      logFormat: json
      dataVolume:
        backend:
          persistentVolumeClaim:
            claimName: thanos-store-data-volume
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
      http:
        ingress:
          enabled: false
      serviceAccount: thanos-store

    query:
      enabled: true
      stores:
      #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-prometheus.monitoring.svc.cluster.local"
      logLevel: info
      logFormat: json
      http:
        ingress:
          enabled: false
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
      serviceAccount: thanos-query

    queryFrontend:
      enabled: true
      http:
        ingress:
          enabled: false
      log:
        level: info
        format: json
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
      serviceAccount: thanos-query-frontend

    compact:
      enabled: true
      logLevel: info
      logFormat: json
      dataVolume:
        backend:
          persistentVolumeClaim:
            claimName: thanos-compact-data-volume
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
      serviceAccount: thanos-compact

    bucket:
      enabled: true
      logLevel: info
      logFormat: json
      http:
        ingress:
          enabled: false
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
      serviceAccount: thanos-bucket

    rule:
      enabled: true
      alertmanagers:
      - "dnssrv+_grpc._tcp.kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local"
      logLevel: info
      logFormat: json
      http:
        ingress:
          enabled: false
      serviceAccount: thanos-rule
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix

    sidecar:
      enable: true
      serviceAccount: prometheus-sidecar
      metrics:
        serviceMonitor:
          enabled: true
          labels:
            prometheus.io/operator: portefaix
