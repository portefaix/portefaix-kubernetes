# SPDX-FileCopyrightText: Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: argo-cd
  namespace: argo-cd
spec:
  chart:
    spec:
      # renovate: registryUrl=https://argoproj.github.io/argo-helm
      chart: argo-cd
      version: 5.24.1
      sourceRef:
        kind: HelmRepository
        name: argo-cd
        namespace: flux-system
  interval: 5m
  releaseName: argo-cd
  targetNamespace: argo-cd
  test:
    enable: false # Enable helm test
  install:
    crds: CreateReplace
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 1m
    cleanupOnFail: true
  timeout: 10m
  values:
    # customLabels:
    #   portefaix.xyz/version: v1.3.0
    installCRDs: false

    controller:
      logFormat: json
      logLevel: info
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          interval: 30s
          additionalLabels:
            prometheus.io/operator: portefaix
        rules:
          enabled: false
          spec:
          - alert: ArgoAppMissing
            expr: |
              absent(argocd_app_info)
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: "ArgoCD No reported applications"
              description: >
                ArgoCD has not reported any applications data for the past 15 minutes which means that it must be down or
                not functioning properly.  This needs to be resolved for this cloud to continue to maintain state.
          - alert: ArgoAppNotSynced
            expr: |
              argocd_app_info{sync_status!="Synced"} == 1
            for: 12h
            labels:
              severity: warning
            annotations:
              summary: "ArgoCD [{{`{{$labels.name}}`}}] Application not synchronized"
              description: >
                The application [{{`{{$labels.name}}`}} has not been synchronized for over 12 hours which means that the state
                of this cloud has drifted away from the state inside Git.
          selector:
            prometheus.io/operator: portefaix
          namespace: monitoring
          additionalLabels:
            prometheus.io/operator: portefaix

    dex:
      enabled: true
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          interval: 30s
          additionalLabels:
            prometheus.io/operator: portefaix

    # TODO: ArgoCD: timeout with Redis and RepoServer
    # labels: kind/bug, priority/high, lifecycle/frozen, area/kubernetes
    # https://github.com/argoproj/argo-cd/issues/4174
    redis:
      enabled: true
      image:
        repository: redis
        tag: 7.2.1
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        readOnlyRootFilesystem: true
        runAsNonRoot: true

    server:
      extraArgs:
      - --insecure
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      logFormat: json
      logLevel: info
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          interval: 30s
          additionalLabels:
            prometheus.io/operator: portefaix
      ingress:
        enabled: false
      config:
        repositories: |
          - type: helm
            name: kubernetes-dashboard
            url: https://kubernetes.github.io/dashboard

    repoServer:
      logFormat: json
      logLevel: info
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          interval: 30s
          additionalLabels:
            prometheus.io/operator: portefaix
